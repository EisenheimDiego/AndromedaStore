version: "3.9"

services:
  eureka-server:
    image: eisenheimdiego/rde-eureka:latest
    container_name: eureka-server
    hostname: eureka-server
    ports:
      - "8761:8761"
    networks:
      - app-network
    restart: "never"


  gateway-service:
    image: eisenheimdiego/rde-gateway:latest
    container_name: gateway-service
    hostname: gateway-service
    environment:
      - EUREKA_DEFAULT_ZONE=http://eureka-server:8761/eureka/
    ports:
      - "8080:8080"
    depends_on:
      - eureka-server
    networks:
      - app-network
    restart: "never"


  users-service:
    image: eisenheimdiego/rde-users-service:latest
    container_name: users-service
    hostname: users-service
    environment:
      - EUREKA_DEFAULT_ZONE=http://eureka-server:8761/eureka/
      - DB_URL=jdbc:mysql://mysql:3306/events?user=events&password=eventspassword
      - DB_SHOW_SQL=true
      - SERVER_PORT=8082
    ports:
      - "8082:8082"
    depends_on:
      - eureka-server
      - mysql
    networks:
      - app-network
    restart: "never"


  events-service:
    image: eisenheimdiego/rde-events-service:latest
    container_name: events-service
    hostname: events-service
    environment:
      - EUREKA_DEFAULT_ZONE=http://eureka-server:8761/eureka/
      - DB_URL=jdbc:mysql://mysql:3306/reservationEvents?user=events&password=eventspassword
      - DB_SHOW_SQL=true
      - SERVER_PORT=8083
    ports:
      - "8083:8083"
    depends_on:
      - eureka-server
      - mysql
    networks:
      - app-network
    restart: "never"
    depends-on:
      mysql
      configurator-service done

  configurator-service:
    *****
    depends-on:
      mysql

  mysql:
    image: mysql:latest
    container_name: mysql
    hostname: mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_USER: events
      MYSQL_PASSWORD: eventspassword
      MYSQL_DATABASE: reservationEvents
    ports:
      - "3307:3306"
    volumes:
      - ./check_db.sh:/check_db.sh
    #command: >
    #  bash -c "
    #    docker-entrypoint.sh mysqld &
    #    sleep 30 && 
    #    mysql -u root -prootpassword -e 'CREATE DATABASE IF NOT EXISTS events;' &&
    #    mysql -u root -prootpassword -e 'CREATE DATABASE IF NOT EXISTS reservationEvents;' &&
    #    mysql -u root -prootpassword -e \"GRANT ALL PRIVILEGES ON *.* TO 'events'@'%';\" &&
    #    mysql -u root -prootpassword -e \"FLUSH PRIVILEGES;\" &&
    #    wait
    #  "
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -p123456 || exit 1"]
      interval: 100s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    restart: "never"

networks:
  app-network:
    driver: bridge